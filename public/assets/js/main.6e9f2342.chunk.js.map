{"version":3,"sources":["containers/Login/Login.module.css","component/Navbar/Navbar.module.css","containers/Login/Login.js","containers/Test/Test.js","containers/SkillsTracker/SkillsTracker.js","hoc/AuxWrapper.js","component/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loginContainer","entry","userid","label","topnav","navBtn","greeting","title","Login","react_default","a","createElement","className","classes","Form_default","Group","controlId","Label","Control","type","placeholder","Check","Button","variant","Component","Test","SkillsTracker","react_router","path","component","aux","props","children","Navbar","AuxWrapper","react_router_dom","to","App","component_Navbar_Navbar","containers_SkillsTracker_SkillsTracker","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,eAAA,8BAAAC,MAAA,qBAAAC,OAAA,sBAAAC,MAAA,0CCAlBL,EAAAC,QAAA,CAAkBK,OAAA,uBAAAC,OAAA,uBAAAC,SAAA,yBAAAC,MAAA,4RCsCHC,mLAhCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,gBACtBS,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAME,UAAWC,IAAQZ,OACvBQ,EAAAC,EAAAC,cAACG,EAAAJ,EAAKK,MAAN,CAAYC,UAAU,kBACpBP,EAAAC,EAAAC,cAACG,EAAAJ,EAAKO,MAAN,CAAYL,UAAWC,IAAQV,OAA/B,UACAM,EAAAC,EAAAC,cAACG,EAAAJ,EAAKQ,QAAN,CACEN,UAAWC,IAAQX,OACnBiB,KAAK,QACLC,YAAY,iBAIhBX,EAAAC,EAAAC,cAACG,EAAAJ,EAAKK,MAAN,CAAYC,UAAU,qBACpBP,EAAAC,EAAAC,cAACG,EAAAJ,EAAKO,MAAN,CAAYL,UAAWC,IAAQV,OAA/B,aACAM,EAAAC,EAAAC,cAACG,EAAAJ,EAAKQ,QAAN,CACEN,UAAWC,IAAQX,OACnBiB,KAAK,WACLC,YAAY,cAGhBX,EAAAC,EAAAC,cAACG,EAAAJ,EAAKK,MAAN,CAAYC,UAAU,qBACpBP,EAAAC,EAAAC,cAACG,EAAAJ,EAAKW,MAAN,CAAYF,KAAK,WAAWhB,MAAM,iBAEpCM,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,UAA/B,mBAzBUK,aCGLC,MANf,WACI,OACIhB,EAAAC,EAAAC,cAAA,0BCcOe,mLAXX,OACEjB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWrB,IAChCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWJ,aANbD,8BCHbM,EAFH,SAAAC,GAAK,OAAIA,EAAMC,sBCsCZC,mLAnBX,OACExB,EAAAC,EAAAC,cAACuB,EAAD,KACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQT,QACtBK,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMvB,UAAWC,IAAQR,OAAQ+B,GAAG,KAApC,QAGA3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMvB,UAAWC,IAAQR,OAAQ+B,GAAG,SAApC,QAGA3B,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQN,OACzBE,EAAAC,EAAAC,cAAA,uCAEU,EAlBXF,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQP,UAAtB,kBALLG,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMvB,UAAWC,IAAQR,OAAQ+B,GAAG,UAApC,kBASeZ,aCDNa,mLATX,OACE5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAD,cALUf,aCOEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACLrC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACoC,EAAD,OAELC,SAASC,eAAe,SDsHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6e9f2342.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__s6fTo\",\"entry\":\"Login_entry__2-cdP\",\"userid\":\"Login_userid__3DeJJ\",\"label\":\"Login_label__2hULu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topnav\":\"Navbar_topnav__1AGx3\",\"navBtn\":\"Navbar_navBtn__1OiUc\",\"greeting\":\"Navbar_greeting__33JKi\",\"title\":\"Navbar_title__3f1sR\"};","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport classes from './Login.module.css';\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.loginContainer}>\r\n        <Form className={classes.entry}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className={classes.label}>Email:</Form.Label>\r\n            <Form.Control\r\n              className={classes.userid}\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label className={classes.label}>Password:</Form.Label>\r\n            <Form.Control\r\n              className={classes.userid}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\n\r\nfunction Test() {\r\n    return (\r\n        <h2>Hello World</h2>\r\n    )\r\n}\r\n\r\nexport default Test","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Login from '../Login/Login';\r\nimport Test from '../Test/Test';\r\n\r\nclass SkillsTracker extends Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Switch>\r\n          <Route path=\"/Login\" component={Login} />\r\n          <Route path=\"/test\" component={Test} />\r\n        </Switch>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillsTracker;\r\n","const aux = props => props.children\r\n\r\nexport default aux","import React, { Component } from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport Aux from '../../hoc/AuxWrapper';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction isLoggedIn(result) {\r\n  if (!result) {\r\n    return (\r\n      <Link className={classes.navBtn} to=\"/Login\">\r\n        Login\r\n      </Link>\r\n    );\r\n  } else {\r\n    return <p className={classes.greeting}>Welcome, Chris</p>;\r\n  }\r\n}\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <div className={classes.topnav}>\r\n          <Link className={classes.navBtn} to=\"/\">\r\n            Home\r\n          </Link>\r\n          <Link className={classes.navBtn} to=\"/test\">\r\n            Test\r\n          </Link>\r\n          <header className={classes.title}>\r\n            <p>Daugherty Skills Tracker</p>\r\n          </header>\r\n          {isLoggedIn(false)}\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SkillsTracker from './containers/SkillsTracker/SkillsTracker';\r\nimport Navbar from './component/Navbar/Navbar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <SkillsTracker />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}